import numpy as np
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import SGD

a = 0.5
b = 1.0

# Generar datos de entrenamiento
x_train = np.linspace(-np.pi, np.pi, 1000)
y_train = np.cos(a*x_train) + np.sin(b*x_train)

# Normalizar los datos de entrada
x_train_norm = (x_train - np.min(x_train)) / (np.max(x_train) - np.min(x_train)) * 2 - 1

# Escalar los datos de salida
y_mean = np.mean(y_train)
y_std = np.std(y_train)
y_train_scaled = (y_train - y_mean) / y_std

# Definir la arquitectura de la red neuronal
model = Sequential()
model.add(Dense(10, input_dim=1, activation='relu'))
model.add(Dense(1, activation='linear'))

# Compilar la red neuronal
